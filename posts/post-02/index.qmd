---
title: "GW1 - Ep.1 Find the Gems "
date: "2024-08-16"
categories: [thoughts]
image: "image.jpg"
format: 
  html:
    page-layout: full
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error=TRUE, cache=FALSE)
```

```{r}
library(tidyverse)
library(DT)
library(here)
library(gt)
library(ggthemes)
library(ggridges)
library(gt)
library(gtExtras)
theme_set(theme_solarized())

```

```{r}
url <- "https://fantasy.premierleague.com/api/bootstrap-static/"
data_official_list <- httr::content(httr::GET(url))

fixtures_list <- httr::content(httr::GET("https://fantasy.premierleague.com/api/fixtures/"))
#mainDf <- data.table::rbindlist(data_official$elements) %>% tibble()
#playersTypes <- rbindlist(data_official$element_types) %>% tibble()
fixtures_df <- data.table::rbindlist(fixtures_list) %>% tibble()
```

```{r}
teams <- read_csv(here("posts","post-02","teams.csv"))

players_2023_df_raw <- read_csv(here("posts","post-01","merged_gw.csv")) 

```


```{r}
players_2023_df <- players_2023_df_raw %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  mutate(
    total_points_season=sum(total_points, na.rm = TRUE)
  ) %>% 
  ungroup() %>% 
  left_join(teams %>% dplyr::select(id, opponent_team_name=short_name), by=c("opponent_team"="id"))


```

```{r}
players_summary_df <- players_2023_df_raw %>% 
  filter(minutes>0) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name,position) %>% 
  summarize(
    total_points_season=sum(total_points, na.rm = TRUE),
    minutes_total=sum(minutes, na.rm = T),
    xG=sum(expected_goals, na.rm = T),
    xA=sum(expected_assists, na.rm = T),
    xGI=sum(expected_goal_involvements, na.rm = T),
    Goals=sum(goals_scored, na.rm = T),
    Assists=sum(assists, na.rm = T),
    GI=sum(goals_scored, na.rm = T)+sum(assists, na.rm = T),
    starts=sum(starts)
  ) %>% 
  ungroup() %>% 
  arrange(desc(total_points_season)) %>% 
  slice_max(order_by = total_points_season, n=200) %>% 
  mutate(
    xG_per90=xG/minutes_total*90,
    xA_per90=xA/minutes_total*90,
    xGI_per90=xGI/minutes_total*90,
    Goals_per90=Goals/minutes_total*90,
    Assists_per90=Assists/minutes_total*90,
    GI_per90=GI/minutes_total*90,
    total_points_average=total_points_season/minutes_total*90
  )

```

```{r}
players_2023_df2 <- players_2023_df %>% 
  semi_join(players_summary_df, by=c("name")) %>% 
  arrange(name,team,position,GW) %>% 
  mutate(
    name=fct_reorder(name, total_points_season)
  ) %>% 
  arrange(desc(name))


```

```{r}

ceiling_df <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  slice_max(order_by = total_points, n= 10) %>% 
  arrange(desc(total_points_season)) %>% 
  group_by(name) %>% 
  summarize(
    ceiling= mean(total_points)
  ) %>% 
  arrange(desc(ceiling)) 

```

```{r}
high_df <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  slice_max(order_by = total_points, n= 20) %>% 
  arrange(desc(total_points_season)) %>% 
  group_by(name) %>% 
  summarize(
    high= mean(total_points)
  ) %>% 
  arrange(desc(high)) 

```

```{r}
max_df <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  slice_max(order_by = total_points, n= 5) %>% 
  arrange(desc(total_points_season)) %>% 
  group_by(name) %>% 
  summarize(
    max= mean(total_points)
  ) %>% 
  arrange(desc(max)) 
```

```{r}
max3_df <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  slice_max(order_by = total_points, n= 3) %>% 
  arrange(desc(total_points_season)) %>% 
  group_by(name) %>% 
  summarize(
    max= mean(total_points)
  ) %>% 
  arrange(desc(max)) 
```

```{r}
max_df_opp1 <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  arrange(desc(total_points)) %>% 
  slice_head(n= 1) %>% 
  arrange(desc(total_points_season))  %>% 
  transmute(name, max1 =if_else(was_home==TRUE,str_to_upper(opponent_team_name),str_to_lower(opponent_team_name)))
```

```{r}
max_df_opp2 <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  arrange(desc(total_points)) %>% 
  slice_head(n= 2) %>% 
  slice_tail(n=1) %>% 
  arrange(desc(total_points_season))  %>% 
  transmute(name, max2 =if_else(was_home==TRUE,str_to_upper(opponent_team_name),str_to_lower(opponent_team_name)))
```

```{r}
max_df_opp3 <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  arrange(desc(total_points)) %>% 
  slice_head(n= 3) %>% 
  slice_tail(n=1) %>% 
  arrange(desc(total_points_season))  %>% 
  transmute(name, max3 =if_else(was_home==TRUE,str_to_upper(opponent_team_name),str_to_lower(opponent_team_name)))
```

```{r}
max_df_opp4 <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  arrange(desc(total_points)) %>% 
  slice_head(n= 4) %>% 
  slice_tail(n=1) %>% 
  arrange(desc(total_points_season))  %>% 
  transmute(name, max4 =if_else(was_home==TRUE,str_to_upper(opponent_team_name),str_to_lower(opponent_team_name)))

```

```{r}
max_df_opp5 <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  arrange(desc(total_points)) %>% 
  slice_head(n= 5) %>% 
  slice_tail(n=1) %>% 
  arrange(desc(total_points_season))  %>% 
  transmute(name, max5 =if_else(was_home==TRUE,str_to_upper(opponent_team_name),str_to_lower(opponent_team_name)))
```

```{r}
mean_df <- players_2023_df2 %>% 
  filter(minutes>0, starts==1) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  summarize(
    mean= mean(total_points)
  ) %>% 
  arrange(desc(mean)) 

```



```{r}
mean_df_Home <- players_2023_df2 %>% 
  filter(minutes>0, starts==1,was_home==TRUE) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  summarize(
    mean_Home= mean(total_points)
  ) %>% 
  arrange(desc(mean_Home)) 

```



```{r}
mean_df_Away <- players_2023_df2 %>% 
  filter(minutes>0, starts==1,was_home==FALSE) %>% 
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  summarize(
    mean_Away= mean(total_points)
  ) %>% 
  arrange(desc(mean_Away)) 

```



```{r}
mean_df_hard <- players_2023_df2 %>% 
  filter(opponent_team_name %in% c("MCI", "ARS", "LIV", "CHE", "TOT", "MUN")) %>% 
  filter(minutes>0, starts==1) %>% #count(opponent_team_name)
  mutate(
    is_played= if_else(minutes>0, 1,0),
    
  ) %>% 
  #filter(position != "GK") %>% 
  #filter(starts==TRUE) %>% 
  relocate(name,team,position,GW, total_points) %>% 
  group_by(name) %>% 
  summarize(
    mean_hard= mean(total_points)
  ) %>% 
  arrange(desc(mean_hard)) 

```




```{r}
xG_df0 <- players_summary_df %>% 
  #filter(starts>15) %>% 
  #slice_max(order_by = total_points_season, n=10) %>% 
  select(name, xG_per90,Goals_per90, xA_per90, Assists_per90, starts, total_points_season, Goals, Assists, position) %>% 
  mutate(
    xG_Delta= (Goals_per90-xG_per90),
    xA_Delta= (Assists_per90-xA_per90)
  ) %>% 
  left_join(mean_df, by = "name") %>% 
  left_join(high_df, by = "name") %>% 
  left_join(ceiling_df, by = "name") %>% 
  left_join(max_df, by = "name") %>% 
  left_join(mean_df_Home, by = "name") %>% 
  left_join(mean_df_Away, by = "name") %>% 
  left_join(mean_df_hard, by = "name") %>% 
  mutate(
    across(c(xG_per90,Goals_per90, xA_per90, Assists_per90,xG_Delta,xA_Delta, mean,high, ceiling, max, mean_Home, mean_Away), ~round(.x,2))
  ) %>% 
  mutate(
    across(c(mean,high, ceiling, max,mean_Home, mean_Away, mean_hard), ~round(.x,1))
  ) %>% 
  dplyr::mutate(plot_column = max, target_col=mean) %>% 
  left_join(max_df_opp1, by="name") %>% 
  left_join(max_df_opp2, by="name") %>% 
  left_join(max_df_opp3, by="name") %>% 
  left_join(max_df_opp4, by="name") %>% 
  left_join(max_df_opp5, by="name") %>% 
  mutate(across(max1:max5, ~ str_sub(.x,1,3))) %>% 
  mutate(max_df_opp1_all = paste(max1,max2,max3,max4,max5, sep = "/")) %>% select(-max1,-max2,-max3,-max4,-max5)

xG_df <- xG_df0 %>% 
  select(-position)

```

```{r}
players_2023_df_density <- players_2023_df %>% 
  filter(starts==TRUE) %>% 
  group_by(name) %>% 
  summarize(total_points_list=list(total_points)) %>% 
  semi_join(xG_df , by="name")

# players_2023_df_density_gt <- players_2023_df_density %>% 
#   gt() %>% 
#   gt_plt_dist(total_points_list, type="boxplot")

#players_2023_df_density_gt
```

# Searching for Candidates 


To begin, I intend to evaluate the past performance of players from the 2023/2024 season to identify interesting candidates for my team. (I will analyze the 2024/2025 fixture in the next post.) What qualifications should I consider? 

**Keep in mind that:**

1. **Nailed-On Starter:** Ensure the player consistently starts to maximize scoring opportunities.

2. **Strong Performance History:** Look for players with a history of strong performances in previous seasons or recent matches.

3. **Favorable Fixtures:** Prioritize players with upcoming matches against weaker opponents.

4. **Penalty Taker** Target players who take free kicks, corners, or penalties.

5. **Good Value:** Evaluate points per million and identify budget-friendly options.

6. **Fixture-Proof:** Choose world-class players who can perform well even against tough opponents.

7. **Low Injury Risk:** Select players with a history of staying fit and avoiding injuries.

8. **Template vs. Differential:** Balance between popular picks (template players) and unique selections (differentials).

9. **<span style="color: red;">**High Ceiling:**</span>** Focus on players with the potential for explosive returns.



I’ve put together a table summarizing the data for the 2023/2024 season. The table is ranked by **average FPL points per starting game**, which is a good starting point. It also includes the average **xG** (expected goals) per 90 minutes and their **xG Delta**, which is the difference between actual goals and xG (average per 90 minutes). The xG Delta might indicate things like the player’s shooting quality(a skilled finisher), variance, or even just luck—I’ll let you decide for each player!

I’ve also added some data to show the player’s *CEILING*, which I personally find really interesting. I calculated this by averaging each player’s best five gameweek FPL points and noting the opponent teams that helped them reach that ceiling. I think it’s fun to dive into! You might be able to spot even more insights with your football knowledge than me! — feel free to share any tips with me, as I consider myself below average in this area. 

I’ve also included the average FPL points separated by games played at home, away, and against top teams like MCI, ARS, LIV, CHE, TOT, and MUN. (I know MUN isn’t the toughest match, but I’ve got to support my team!). I *believe* this will help in choosing the captain each week.

*Please note that the xG and FPL points do not exclude penalty-taking. Keep this in mind when comparing and analyzing each player.

# Attacking 


## Top10 by average point of season 2023/2024

```{r}
#xG_df %>% glimpse()

xG_gt <- xG_df %>%
  arrange(desc(mean)) %>% 
  slice(1:10) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.3,0.5,1.1),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,6,9))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,5,11))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,11,18.7))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starting gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xA_per90, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xG_Delta)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))


xG_gt

#gt::gtsave(data = xG_gt,filename = here("xG_gt.png"))
```

```{r}
#xG_df %>% glimpse()

xG_gt <- xG_df %>%
  arrange(desc(max)) %>% 
  slice(1:10) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.3,0.5,1.1),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,6,9))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,5,11))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,11,18.7))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starting gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xA_per90, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xG_Delta)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))


xG_gt

#gt::gtsave(data = xG_gt,filename = here("xG_gt.png"))
```


Let's begin with Top 10 of the maximum FPL point average per starting, They have an average FPL points per start of at least 6!

- Olise, His data is superb! So, Bayern Munich has already decided to buy him. 

- Palmer, He was phenomenal last season, achieving the highest point average and ceiling, especially with his remarkable contributions at home, including against the Big 6. If he maintains similar opportunities in the 2023/2024 season, Palmer could continue to be a significant threat, particularly in home matches. The only concern is Chelsea's form under their **new manager**, which could impact Palmer’s role or position. This year, his price is set at 10.5, making him a great value compared to Salah (12.5) and Haaland (15.0). It's crucial to check his fitness for Gameweek 1. 

- Haaland's xG is exceptionally high = MONSTER, indicating a constant threat, though he slightly underperformed his xG. His FPL points per start are still strong, with a notable ceiling of 16.0. Unlike other players in the league, away games aren't a problem for him. You must decide if he's worth his price of 15.0, especially when compared to other combinations for budget management.

- Salah has a solid xG, but like Haaland, he has slightly underperformed his expected goals. His FPL points per start are strong, especially in home matches, where his consistency makes him a reliable choice. If you want to challenge Salah, it could be during away games. The only concern is how Liverpool will perform under their new manager.


- Foden is special. He has an average xG but a large xG delta across 33 starts, showing his efficiency with chances. His FPL points per start reflect a very high ceiling, especially in favorable matches. Foden’s impact may fluctuate based on the opposition, but when he's in form, his potential is significant, making him a potentially explosive option. We might consider avoiding him in big matches.

- Jota is special, he has highest xG Delta per 90 minutes, but his limited playing time is a concern. His average points are based on just 60-70 minutes per match. If he played the full 90 minutes, he could be just as great a pick as Salah, especially at Home!

- Saka has performed closely in line with his xG, indicating a consistent level of performance. His FPL points are steady, also solid at away from home or against the Big 6. The stats suggest only a small upside, possibly limited by Arteta’s tactics or spreaded to teammates. 

- Watkins. His high ceiling indicates he can deliver big points in favorable matches, not Big 6.

- Son is Special also, he has slightly overperformed his xG, and his high ceiling suggests he’s capable of significant points, particularly against upper mid-table teams. Son remains a key player with the potential to deliver in a variety of match situations.

- Isak’s xG is strong at *0.81* and he’s performed close to expectations. His FPL points are consistent, with a solid average at home. The only concern is his performance in away games and against the Big 6. He is candidate captain in gw1 !!

### **Wrap-up**

  
| Category                          | Description                                                        | Players                        |
|-----------------------------------|--------------------------------------------------------------------|--------------------------------|
| Consistent Performers             | Regularly high xG, solid FPL points per start, expected to maintain consistency, fixture proof. | Haaland(15), Salah(12.5),Palmer(10.5), Saka(10)           |
| High Potential for Explosive Returns | High ceiling, can deliver big returns in favorable fixtures.        | Son(10) ,Foden(9.5)            |
| Fixture-Dependent Performers      | High ceiling in favorable fixtures, capped for Away game or against Big                                | Watkins, Isak, Jota            |





## Ceiling and Average FPL point, per starting
```{r}
#xG_df %>% glimpse()

xG_gt <- xG_df %>%
  arrange(desc(max)) %>% 
  slice(1:12) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.3,0.5,1.1),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,6,9))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,5,11))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,11,18.7))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starting gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by ceiling* per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xA_per90, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xG_Delta)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))


xG_gt

#gt::gtsave(data = xG_gt,filename = here("xG_gt.png"))
```

```{r}
#xG_df %>% glimpse()

xG_gt <- xG_df %>%
  arrange(desc(max)) %>% 
  slice(13:24) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.3,0.5,1.1),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,6,9))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,5,11))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,11,18.7))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starting gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by ceiling* per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xA_per90, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xG_Delta)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))


xG_gt

#gt::gtsave(data = xG_gt,filename = here("xG_gt.png"))
```

Which player is appealing to managers who love Upside-Chasing? 

Bruno, Havertz and Mateta also interesting! 


```{r}
xG_df0 %>% 
  slice_max(order_by = max, n = 50) %>% 
  ggplot(aes(mean, max))+
  geom_point(aes(size=xG_per90, color=position), alpha=0.7)+
  labs(
    title = "FPL point per starting, 2023/2024",
    x="Average FPL point",
    y="Ceiling",
    caption = "Fpl Infinitesimal"
  )+
  geom_text(aes(label=name), 
            data = xG_df0 %>%
              mutate(
                name= case_when(
                  name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
                  TRUE ~ name
                )
              ) %>% 
              mutate(name=sub(".* ", "", name))%>% 
              slice_max(n=15, order_by = max) 
            ,
            hjust = 0, nudge_x = 0.05, size=2.5
  ) +
  geom_text(aes(label=name), 
            data = xG_df0 %>%
              mutate(
                name= case_when(
                  name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
                  TRUE ~ name
                )
              ) %>% 
              mutate(name=sub(".* ", "", name))%>% 
              slice_max(n=25, order_by = mean) 
            ,
            hjust = 0, nudge_x = 0.05, size=2.5
  ) 
  
```

## xG per 90

```{r}
xG_df0 %>% 
  ggplot(aes(starts, xG_per90))+
  geom_point(aes(size=mean, color=position), alpha=0.7)+
  labs(
    title ="xG per 90, FPL season 2023/2024",
    x="# starts",
    y="",
    caption = "Fpl Infinitesimal"
  )+
  geom_text(aes(label=name), 
            data = xG_df0 %>%
              mutate(
                name= case_when(
                  name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
                  TRUE ~ name
                )
              ) %>% 
              mutate(name=sub(".* ", "", name))%>% 
              slice_max(n=25, order_by = xG_per90) 
            ,
            hjust = 0, nudge_x = 0.05, size=2.5
  ) +
  geom_text(aes(label=name), 
            data = xG_df0 %>%
              mutate(
                name= case_when(
                  name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
                  TRUE ~ name
                )
              ) %>% 
              mutate(name=sub(".* ", "", name))%>% 
              slice_max(n=25, order_by = xG_Delta) 
            ,
            hjust = 0, nudge_x = 0.05, size=2.5
  ) 
  
```

## xG Delta

```{r}
xG_df0 %>% 
  ggplot(aes(xG_per90, xG_Delta))+
  geom_point(aes(size=starts, color=position), alpha=0.7)+
  labs(
    title ="xG Delta per 90, FPL season 2023/2024",
    x="xG_per90",
    y="xG_Delta",
    caption = "Fpl Infinitesimal"
  )+
  geom_text(aes(label=name), 
            data = xG_df0 %>%
              mutate(
                name= case_when(
                  name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
                  TRUE ~ name
                )
              ) %>% 
              mutate(name=sub(".* ", "", name))%>% 
              slice_max(n=25, order_by = xG_per90) 
            ,
            hjust = 0, nudge_x = 0.05, size=2.5
  ) +
  geom_text(aes(label=name), 
            data = xG_df0 %>%
              mutate(
                name= case_when(
                  name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
                  TRUE ~ name
                )
              ) %>% 
              mutate(name=sub(".* ", "", name))%>% 
              slice_max(n=25, order_by = xG_Delta) 
            ,
            hjust = 0, nudge_x = 0.05, size=2.5
  ) +
  geom_abline(intercept = 0, slope = 0, colour = "orange", linetype = "dashed")
  
```

## Ranking 11-30

- Havertz has a very high ceiling and performs well in away games and against the Big 6. He's a very interesting option !

- Aside from the top 10 mentioned above, here are the players with an impressive xG per 90 minutes of more than 0.50: Wilson, Darwin, Wood, Jackson, Richarlison, Solanke, João Pedro, Dominic Calvert-Lewin, Gakpo, and Muniz. (You can sort by [DataTable](https://7paw.github.io/BlogFPL/posts/post-01/))
  - Wood & Muniz & DCL have favorable early fixtures.
  - **Solanke** has moved to Tottenham, a very attacking team!
  - João Pedro is priced at just 5.5!

- Wood performs better in away matches but struggles against top teams, making him a potential differential pick for certain fixtures.

- Kevin De Bruyne has a lower xG, reflecting his role as a playmaker rather than a goal-scorer. His FPL points per start are consistent, with a high performance in away matches. His ceiling is lower than expected for a player of his caliber, which might be due to injury or rotation risks. His value remains high in matches against weaker teams where he can exploit spaces.

- Eze has been a consistent performer with a moderate xG and slight overperformance in goals. His FPL points per start are decent, and he performs particularly well at home. His ceiling is respectable, making him a solid option in matches where Crystal Palace is favored.

- Bowen's xG is reasonable, and he slightly overperforms, reflecting his reliability as an attacking asset. His FPL points per start are consistent across home and away matches, with a decent ceiling. He's a dependable choice for managers looking for a player with steady returns.

- Gordon is interesting because of his high xG compared to his relatively low FPL points per start. His high ceiling against top teams suggests he could be a surprise performer in challenging matches. Most of his FPL points come from matches against TOT, CHE, LIV, MUN, and SHU, all at home! 

- Sterling has a moderate xG and slightly overperforms his expected goals. His FPL points per start are lower than expected for a player of his reputation, and his ceiling is not very high. Sterling's inconsistent form could be a risk, but he may still offer value in specific matchups. 

### Wrap-up: 

Differential Picks: Players like Wood, Muniz and Gordon could be valuable differentials due to their strong performances in specific conditions.

Consistent Performers: Bowen and Eze provide stable returns and could be reliable options throughout the season.

Underperforming Assets: Kevin De Bruyne and Raheem Sterling might not be living up to their usual standards but could improve depending on their roles and fixtures.


```{r}
#xG_df %>% glimpse()

xG_gt <- xG_df %>%
  arrange(desc(mean)) %>% 
  slice(11:20) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.3,0.5,1.1),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,6,9))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,6,11))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,11,18.7))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starts gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xA_per90, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xG_Delta)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))


xG_gt

#gt::gtsave(data = xG_gt,filename = here("xG_gt.png"))
```

```{r}
#xG_df %>% glimpse()

xG_gt <- xG_df %>%
  arrange(desc(mean)) %>% 
  slice(21:30) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.3,0.5,1.1),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,6,9))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,6,11))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,11,18.7))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starts gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xA_per90, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xG_Delta)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))


xG_gt

#gt::gtsave(data = xG_gt,filename = here("xG_gt.png"))
```


# Defense

The tabla is sorted by xG+xA average per 90 minutes, 
  - Arsenal has a strong potential for a clean sheet.
  - White is great in all of home, away and Big also.
  - Atatcking interesting are: TAA, Robertson, Trippier, Porro, Gvardiol, Gabriel(Away game).

Consistent Performers with High xA: Trent Alexander-Arnold and Trippier are key assets due to their high assist potential, though their explosive returns might be limited to specific fixtures.

Goal Threats: Gabriel Magalhães and Joško Gvardiol show potential for goals from defense, making them attractive picks for managers seeking defensive returns with the bonus of goal potential.

Fixture-Dependent Players: Tomiyasu and Andrew Robertson may be more valuable in certain matchups, particularly at home or against weaker opponents.

(You can play yourself by [DataTable](https://7paw.github.io/BlogFPL/posts/post-01/))

```{r}

xG_gt_def <- xG_df0 %>%
  filter(position=="DEF", mean>3, max>7) %>% 
  select(-position) %>% 
  arrange(desc(xG_per90+xA_per90)) %>% 
  slice(1:15) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2:4,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.01,0.2,0.4),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,4,5.3))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,5,8))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,10,13))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starts gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xA_per90="xA",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xG_Delta, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xA_per90)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))

xG_gt_def

#gt::gtsave(data = xG_gt,filename = here("results","xG_gt.png"))
```


```{r}

xG_gt_def <- xG_df0 %>%
  filter(position=="DEF", mean>3, max>7) %>% 
  select(-position) %>% 
  arrange(desc(max)) %>% 
  slice(1:15) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2:4,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.01,0.2,0.4),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,4,5.3))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,5,8))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(7,10,13))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starts gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xA_per90="xA",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xG_Delta, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xA_per90)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c(total_points_season, Goals, Assists))

xG_gt_def

#gt::gtsave(data = xG_gt,filename = here("results","xG_gt.png"))
```

# GoalKeeper

There isn't much difference in FPL points between goalkeepers, as seen from their points per start, especially when you hold a goalkeeper long-term.

```{r}
#xG_df0 %>% glimpse()

xG_gt_def <- xG_df0 %>%
  filter(position=="GK", max>6) %>% 
  select(-position) %>% 
  arrange(desc(mean)) %>% 
  slice(1:20) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2:4,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.01,0.2,0.4),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,3.5,4.3))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,3,8))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(6,10,11))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starts gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xA_per90="xA",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xG_Delta, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xA_per90)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c( Goals, Assists, xG_per90, xA_per90))


xG_gt_def

#gt::gtsave(data = xG_gt,filename = here("results","xG_gt.png"))
```

```{r}
#xG_df0 %>% glimpse()

xG_gt_def <- xG_df0 %>%
  filter(position=="GK", max>6) %>% 
  select(-position) %>% 
  arrange(desc(max)) %>% 
  slice(1:20) %>% 
  left_join(players_2023_df_density, by="name") %>% 
  mutate(
    name= case_when(
      name=="Diogo Teixeira da Silva" ~ "Diogo Jota",
      TRUE ~ name
    )
  ) %>%
  gt() %>% 
  data_color(
    columns = 2:4,
    colors = scales::col_numeric(
      palette = c("yellow","green","darkgreen"),
      #domain=c(0,1.5,4))
      domain = c(0.01,0.2,0.4),
      na.color = "yellow")
  ) %>% 
  data_color(
    columns = 7,
    colors = scales::col_numeric(
      palette = c("cornsilk","yellow","green"),
      #domain=c(0,1.5,4))
      domain = c(0,100,250))
  ) %>% 
  data_color(
    columns = 10,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(-0.5,0,0.7))
  ) %>%
  data_color(
    columns = 12,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","pink"),
      #domain=c(0,1.5,4))
      domain = c(3,3.5,4.3))
  ) %>% 
  data_color(
    columns = 16:18,
    colors = scales::col_numeric(
      palette = c("red","cornsilk","green"),
      #domain=c(0,1.5,4))
      domain = c(0,3,8))
  ) %>% 
  data_color(
    columns = 15,
    colors = scales::col_numeric(
      palette = c("cornsilk","cornsilk","orange"),
      #domain=c(0,1.5,4))
      domain = c(6,10,11))
  ) %>% 
  # data_color(
  #   columns = 17:22,
  #   colors = scales::col_factor(
  #     palette = "Pastel1",
  #     domain = NULL,
  #     na.color = 'gray'
  #   ),
  #   apply_to = "fill",
  #   autocolor_text = TRUE
  # ) %>% 
  tab_footnote(
    footnote = md("**`Fpl Infinitesimal`** \n
                  Delta = Actual Goals - xG, per 90 \n
                  ceiling* is average points of maximum 5 gws \n
                  mean* is average points for starts gw \n
                  @Big*: MCI, ARS, LIV, CHE, TOT, MUN ")
  ) %>% 
  tab_options(
    heading.background.color = "cornsilk",
    table.background.color="cornsilk"
    #heading.border.bottom.color = "#eebd00",
    #heading.border.bottom.width = "5px",
    #heading.border.lr.color = "#aae100",
    #heading.border.lr.width = "50px",   #no effect
  ) %>% 
  tab_header(
    title = md("FPL Season 2023/2024, Ranking by average point per start")
  ) %>%
  tab_options(column_labels.background.color = "cornsilk",column_labels.font.weight = "bold") %>% 
  gt_add_divider("starts", style = "dashed", sides = "left") %>% 
  gt_add_divider("xA_per90", style = "dashed") %>% 
  gt_add_divider("xA_Delta", style = "dashed") %>% 
  gt_add_divider("mean_Away", style = "dashed") %>% 
  gt_add_divider("mean_hard", style = "dashed") %>% 
  cols_label(
    name="",
    total_points_season="FPL",
    mean="mean*",
    high="Tail_20gw",
    ceiling="Tail_10gw",
    max="ceiling*",
    xG_per90="xG",
    xA_per90="xA",
    xG_Delta="Delta",
    mean_Home="Home",
    mean_Away="Away",
    mean_hard="@Big*",
    max_df_opp1_all=""
  ) %>% 
  gt_plt_dist(total_points_list, type="histogram",fig_dim = c(15, 30), line_color = "purple", fill_color = "pink", bw = 3) %>% 
  cols_hide(c(Goals_per90, Assists_per90, xG_Delta, xA_Delta)) %>% 
  cols_hide(c(high, ceiling)) %>% 
  cols_move(columns=c(total_points_season, Goals, Assists), after = name) %>% 
  cols_move(columns=starts, after = name) %>% 
  cols_move(columns=total_points_list, after = xG_Delta) %>% 
  gt_add_divider("starts", style = "dashed") %>% 
  gt_add_divider("xG_Delta", style = "dashed") %>%
  gt_add_divider("plot_column", style = "dashed") %>%
  gt_plt_bullet(column = plot_column, target = target_col, width = 45,palette = c("orange", "red3")) %>% 
  cols_label(
    plot_column="",
    total_points_list="FPL point"
  ) %>% 
  tab_spanner(label = "per 90 mins", columns = c(xG_per90, xA_per90)) %>% 
  tab_spanner(label = "Point per Start", columns = c(total_points_list,mean, max,plot_column )) %>% 
  tab_spanner(label = "Average per Start", columns = c(mean_Home,mean_Away, mean_hard )) %>% 
  tab_spanner(label = "Opponents contribute to past ceiling:", columns = (max_df_opp1_all )) %>% 
  tab_style(
    style = list(
      cell_borders(color = "grey", weight = px(3),sides = c("left", "right")),
      cell_text(
        weight = "bold",
      )
    ),
    locations = cells_body(columns = xG_per90)
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="center"
      )
    ),
    locations = cells_body(columns = everything())
  ) %>% 
  tab_style(
    style = list(
      cell_text(
        align="left"
      )
    ),
    locations = cells_body(columns = name)
  ) %>% 
  cols_hide(c( Goals, Assists, xG_per90, xA_per90))


xG_gt_def

#gt::gtsave(data = xG_gt,filename = here("results","xG_gt.png"))
```

You can play around by yourself in [DataTable](https://7paw.github.io/BlogFPL/posts/post-01/).
